name: 标签自动发布
run-name: 标签自动发布 ${{ github.ref_name }}

on:
  push:
    tags:
      - 'v*' # 匹配所有以v开头的标签，如v1.0.0

jobs:
  build:
    name: 构建
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: 仓库检出
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史以便生成更新日志
          
      - name: 设置xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          
      - name: 设置MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
          
      - name: 构建项目
        run: |
          # 显示xmake版本
          xmake --version
          
          # 配置并构建项目
          xmake f -p mingw -a x86_64 -m release
          xmake -v
          
          # 显示构建输出目录结构
          Write-Host "构建输出目录结构:"
          Get-ChildItem -Path . -Directory | ForEach-Object { Write-Host $_.FullName }
          if (Test-Path build) {
            Get-ChildItem -Path build -Recurse | ForEach-Object { Write-Host $_.FullName }
          }
          
      - name: 打包文件
        run: |
          # 创建输出目录
          if (!(Test-Path release)) { New-Item -Path release -ItemType Directory }
          if (!(Test-Path release/catime)) { New-Item -Path release/catime -ItemType Directory }
          
          # 查找构建输出文件
          Write-Host "查找构建输出文件..."
          Get-ChildItem -Path . -Recurse -Filter "catime.exe" | ForEach-Object { Write-Host $_.FullName }
          
          # 复制构建文件（使用正确的路径）
          $buildOutput = Get-ChildItem -Path . -Recurse -Filter "catime.exe" | Select-Object -First 1
          if ($buildOutput) {
            $buildDir = $buildOutput.DirectoryName
            Write-Host "找到构建目录: $buildDir"
            Copy-Item -Path "$buildDir/*" -Destination release/catime/ -Recurse -Force
          } else {
            Write-Error "无法找到构建输出文件!"
            exit 1
          }
          
          # 复制其他必要文件
          Copy-Item -Path asset -Destination release/catime/ -Recurse -Force
          Copy-Item -Path LICENSE -Destination release/catime/ -Force
          Copy-Item -Path PRIVACY.md -Destination release/catime/ -Force
          Copy-Item -Path README.md -Destination release/catime/ -Force
          Copy-Item -Path README-zh.md -Destination release/catime/ -Force
          
      - name: 创建ZIP压缩包
        run: |
          # 显示要打包的文件
          Write-Host "要打包的文件:"
          if (Test-Path release/catime) {
            Get-ChildItem -Path release/catime -Recurse | ForEach-Object { Write-Host $_.FullName }
          } else {
            Write-Error "release/catime 目录不存在!"
            exit 1
          }
          
          # 创建ZIP包
          Compress-Archive -Path release/catime/* -DestinationPath release/catime-${{ github.ref_name }}.zip -Force
          
      - name: 生成更新日志
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
          commitMode: true
          toTag: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 创建发布
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            release/catime-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 